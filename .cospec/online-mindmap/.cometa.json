{"design":{"lastTaskId":"2db2ada9-04a6-40d5-89a2-61f22a60136a","lastCheckpointId":"baa405d1a5ff8a6e2c652e83cae5aaac1bf9075d","content":"# 技术架构设计文档 - 在线思维导图产品\n\n## 1. 架构概述\n\n### 1.1 架构目标\n\n* **可扩展性**: 支持模块化扩展，便于后续功能增强\n* **高可用性**: 基于Vercel平台确保服务稳定性\n* **可维护性**: 清晰的分层架构，便于代码维护\n\n### 1.2 架构原则\n\n* **单一职责原则**: 每个模块专注于特定功能\n* **开闭原则**: 对扩展开放，对修改封闭\n* **依赖倒置原则**: 依赖抽象而非具体实现\n\n## 2. 系统架构\n\n### 2.1 整体架构图\n\n```mermaid\ngraph TB\n    subgraph 用户层\n        A[Web浏览器]\n    end\n    \n    subgraph 前端应用层\n        B[Vue2.x应用]\n        C[ElementUI组件]\n        D[Simple Mind Map渲染引擎]\n    end\n    \n    subgraph 业务逻辑层\n        E[认证模块]\n        F[文件管理模块]\n        G[协同编辑模块]\n        H[导出模块]\n    end\n    \n    subgraph 外部服务层\n        I[GitHub API]\n        J[Vercel平台]\n    end\n    \n    A --> B\n    B --> C\n    B --> D\n    B --> E\n    B --> F\n    B --> G\n    B --> H\n    E --> I\n    F --> I\n    G --> I\n    B --> J\n```\n\n### 2.2 架构分层\n\n#### 2.2.1 表示层\n\n* **Vue2.x应用**: 主应用框架，负责页面路由和状态管理\n* **ElementUI组件**: 提供UI组件库，确保界面一致性\n* **Simple Mind Map**: 核心思维导图渲染引擎\n\n#### 2.2.2 业务层\n\n* **认证模块**: GitHub OAuth集成，用户身份管理\n* **文件管理模块**: GitHub仓库文件操作，版本控制\n* **协同编辑模块**: 多用户实时协作功能\n* **导出模块**: 支持PNG/MindMap格式导出\n\n#### 2.2.3 数据层\n\n* **GitHub API**: 作为主要数据存储和版本控制系统\n* **本地存储**: 临时缓存和用户会话管理\n\n## 3. 服务设计\n\n### 3.1 模块拆分\n\n| 模块名称 | 职责 | 技术栈 | 数据源 |\n|----------|------|--------|--------|\n| 认证模块 | GitHub OAuth认证、用户信息管理 | Vue2.x + GitHub API | GitHub OAuth |\n| 文件管理模块 | 文件CRUD、版本历史、分享功能 | Vue2.x + GitHub API | GitHub仓库 |\n| 编辑器模块 | 思维导图编辑、节点操作 | Simple Mind Map | 本地状态 |\n| 协同模块 | 实时协作、冲突解决 | WebSocket + GitHub API | GitHub API |\n| 导出模块 | PNG/MindMap格式导出 | Canvas API | 本地渲染 |\n\n### 3.2 模块间通信\n\n#### 3.2.1 同步通信\n\n* **组件通信**: Vue事件总线，Props/Emit模式\n* **API调用**: Axios HTTP客户端，RESTful接口\n\n#### 3.2.2 异步通信\n\n* **协同编辑**: WebSocket实时通信\n* **文件同步**: GitHub API轮询机制\n\n### 3.3 API设计\n\n#### 3.3.1 GitHub认证API\n\n* **URL**: `/api/auth/github`\n* **Method**: GET\n* **描述**: GitHub OAuth认证入口\n* **请求参数**: 无\n* **响应格式**:\n```json\n{\n    \"code\": 200,\n    \"data\": {\n        \"auth_url\": \"https://github.com/login/oauth/authorize\",\n        \"state\": \"random_string\"\n    }\n}\n```\n\n#### 3.3.2 文件操作API\n\n* **URL**: `/api/files/{owner}/{repo}/{path}`\n* **Method**: GET/POST/PUT/DELETE\n* **描述**: GitHub仓库文件操作\n* **请求参数**:\n```json\n{\n    \"content\": \"base64_encoded_content\",\n    \"message\": \"commit_message\",\n    \"sha\": \"file_sha\"\n}\n```\n\n#### 3.3.3 协同编辑API\n\n* **URL**: `/api/collaborate/{file_id}`\n* **Method**: WebSocket\n* **描述**: 实时协同编辑通信\n* **消息格式**:\n```json\n{\n    \"type\": \"operation\",\n    \"user_id\": \"user_id\",\n    \"operation\": {\n        \"action\": \"add_node\",\n        \"data\": {}\n    }\n}\n```\n\n## 4. 数据架构\n\n### 4.1 数据存储策略\n\n* **GitHub仓库**: 作为主要持久化存储，利用Git版本控制\n* **浏览器本地存储**: 用户会话、临时编辑状态\n* **内存缓存**: 当前编辑的思维导图数据\n\n### 4.2 数据模型\n\n#### 4.2.1 MindMap数据结构\n\n```json\n{\n    \"id\": \"unique_id\",\n    \"title\": \"思维导图标题\",\n    \"root\": {\n        \"id\": \"root_id\",\n        \"text\": \"根节点\",\n        \"children\": [],\n        \"style\": {\n            \"color\": \"#000000\",\n            \"fontSize\": 16,\n            \"icon\": \"icon_name\"\n        }\n    },\n    \"metadata\": {\n        \"created_at\": \"timestamp\",\n        \"updated_at\": \"timestamp\",\n        \"version\": \"1.0.0\"\n    }\n}\n```\n\n#### 4.2.2 UserSession数据结构\n\n```json\n{\n    \"user_id\": \"github_user_id\",\n    \"username\": \"github_username\",\n    \"access_token\": \"oauth_token\",\n    \"current_file\": \"file_path\",\n    \"collaboration_rooms\": [\"room_id1\", \"room_id2\"]\n}\n```\n\n### 4.3 数据一致性\n\n* **强一致性场景**: 用户认证信息、文件保存操作\n* **最终一致性场景**: 协同编辑的冲突解决、文件同步\n\n## 5. 部署架构\n\n### 5.1 Vercel部署配置\n\n* **静态资源**: Vue应用构建产物\n* **环境变量**: GitHub OAuth配置\n* **函数路由**: API代理和认证处理\n\n### 5.2 环境变量配置\n\n```\nGITHUB_CLIENT_ID=github_oauth_client_id\nGITHUB_CLIENT_SECRET=github_oauth_client_secret\nGITHUB_REDIRECT_URI=vercel_app_url/auth/callback\n```\n\n## 6. 安全设计\n\n### 6.1 认证安全\n\n* **OAuth 2.0**: 使用GitHub标准OAuth流程\n* **Token管理**: 访问令牌安全存储和刷新机制\n* **CSRF防护**: State参数验证\n\n### 6.2 数据安全\n\n* **HTTPS**: 全站HTTPS加密传输\n* **权限控制**: 基于GitHub仓库权限的访问控制\n* **敏感信息**: 避免在前端存储敏感数据\n\n## 7. 技术选型说明\n\n### 7.1 前端技术栈\n\n* **Vue2.x**: 成熟稳定的前端框架，生态丰富\n* **ElementUI**: 企业级UI组件库，开发效率高\n* **Simple Mind Map**: 专业的思维导图渲染库\n\n### 7.2 集成技术\n\n* **GitHub API**: 利用GitHub作为文件存储和版本控制\n* **Vercel**: 现代化的静态网站部署平台\n* **WebSocket**: 实现实时协同编辑功能"},"requirements":{"lastTaskId":"57e2798d-2476-48fc-9a3b-4820ce2ff993","lastCheckpointId":"d922c007e2fb7dedd15f0c1ee9d857709d6a109f","content":"# 需求规格说明书 - 在线思维导图产品\n\n## 1. 项目概述\n\n### 1.1 背景\n开发基于Vue2.x和ElementUI技术栈的在线思维导图工具，支持GitHub账号集成与文件管理功能。\n\n### 1.2 目标\n实现具备基础思维导图功能的Web应用，集成GitHub API实现用户身份认证和文件存储，满足团队协作与知识管理需求。\n\n### 1.3 范围\n包含核心编辑功能、GitHub集成、文件管理功能，不包含性能优化、安全加固等非功能性需求。\n\n## 2. 功能需求\n\n### 2.1 用户角色\n| 角色名称 | 描述 | 权限 |\n|----------|------|------|\n| 普通用户 | 基础编辑功能 | 文件创建/编辑 |\n| GitHub认证用户 | 云存储功能 | 文件存储/版本控制 |\n\n### 2.2 功能清单\n\n#### 2.2.1 核心编辑功能\n- **需求ID**: FR-001\n- **需求描述**: 提供节点增删改、连接线调整、样式设置（字体/颜色/图标）\n- **优先级**: 高\n- **验收标准**: 支持至少5种节点类型和3种连接线样式\n\n#### 2.2.2 GitHub集成\n- **需求ID**: FR-002\n- **需求描述**: 通过GitHub OAuth实现用户认证，使用GitHub API操作仓库文件\n- **优先级**: 高\n- **验收标准**: \n  - 环境变量配置GITHUB_CLIENT_ID/GITHUB_CLIENT_SECRET\n  - 支持文件在GitHub仓库的创建/读取/更新/删除\n\n#### 2.2.3 文件管理\n- **需求ID**: FR-003\n- **需求描述**: 提供文件版本历史、分享链接生成、导出导入功能\n- **优先级**: 中\n- **验收标准**: 支持导出为PNG/MindMap格式，版本历史记录不少于10条\n\n## 3. 用户故事\n\n### 3.1 用户创建思维导图\n**作为** 团队成员  \n**我想要** 在线创建思维导图  \n**以便于** 进行项目规划  \n\n**验收条件**:  \n* 支持快捷键Ctrl+S保存  \n* 新建文件默认命名为\"Untitled.mmap\"\n\n## 4. 数据需求\n\n### 4.1 数据实体\n- MindMap: 包含节点树结构、样式配置、版本信息\n- UserSession: 存储GitHub认证信息和当前编辑状态\n\n### 4.2 数据流\n用户操作 → GitHub仓库持久化\n\n## 5. 假设和依赖\n\n### 5.1 假设\n- GitHub API v3接口保持稳定\n- 支持现代浏览器环境\n\n### 5.2 依赖\n- Simple Mind Map库实现核心渲染\n- ElementUI组件库提供UI组件"},"tasks":{"lastTaskId":"5423d306-4411-4c95-bc4b-d12b2614b9b8","lastCheckpointId":"34d0f006c0526aaa13d5352469c12d8f2a114620","content":"# 任务规划 - 在线思维导图产品\n\n- [ ] 1. 实现【核心编辑功能】子需求\n- 实现节点增删改操作功能\n- 实现连接线调整和样式设置\n- 实现字体、颜色、图标样式配置\n- 集成Simple Mind Map渲染引擎\n- 确保支持至少5种节点类型和3种连接线样式\n- 确保子需求可独立运行\n- _需求：[FR-001]_\n\n- [ ] 2. 实现【GitHub认证集成】子需求\n- 实现GitHub OAuth认证流程\n- 实现用户身份验证和会话管理\n- 实现GitHub API客户端集成\n- 配置环境变量GITHUB_CLIENT_ID/GITHUB_CLIENT_SECRET\n- 实现用户信息获取和存储\n- 确保子需求可独立运行\n- _需求：[FR-002]_\n\n- [ ] 3. 实现【文件管理基础功能】子需求\n- 实现GitHub仓库文件创建功能\n- 实现GitHub仓库文件读取功能\n- 实现GitHub仓库文件更新功能\n- 实现GitHub仓库文件删除功能\n- 实现文件列表展示和选择\n- 确保子需求可独立运行\n- _需求：[FR-002]_\n\n- [ ] 4. 实现【文件版本历史】子需求\n- 实现文件版本历史记录功能\n- 实现版本对比和回退功能\n- 实现版本信息展示界面\n- 确保版本历史记录不少于10条\n- 确保子需求可独立运行\n- _需求：[FR-003]_\n\n- [ ] 5. 实现【文件分享功能】子需求\n- 实现分享链接生成功能\n- 实现分享权限控制\n- 实现分享链接访问界面\n- 确保子需求可独立运行\n- _需求：[FR-003]_\n\n- [ ] 6. 实现【文件导出导入功能】子需求\n- 实现PNG格式导出功能\n- 实现MindMap格式导出功能\n- 实现MindMap格式导入功能\n- 实现导出导入界面和操作流程\n- 确保子需求可独立运行\n- _需求：[FR-003]_\n\n- [ ] 7. 实现【协同编辑基础功能】子需求\n- 实现WebSocket连接管理\n- 实现实时操作同步机制\n- 实现用户在线状态显示\n- 实现基础冲突检测\n- 确保子需求可独立运行\n- _需求：[FR-001]_\n\n- [ ] 8. 实现【用户界面和交互】子需求\n- 实现主界面布局和导航\n- 实现工具栏和菜单功能\n- 实现快捷键支持（Ctrl+S保存）\n- 实现新建文件默认命名\"Untitled.mmap\"\n- 集成ElementUI组件库\n- 确保子需求可独立运行\n- _需求：[FR-001]_\n\n- [ ] 9. 实现【数据持久化】子需求\n- 实现本地存储缓存机制\n- 实现用户会话管理\n- 实现数据同步到GitHub仓库\n- 实现离线编辑支持\n- 确保子需求可独立运行\n- _需求：[FR-002]_"},"version":"1.0.0","lastModified":"2025-10-28T04:05:01.857Z"}